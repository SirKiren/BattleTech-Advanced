{
	"behaviorVariables": [
		{
			"json_comment": "Influence Factor Weight to maximize expected damage to hostiles. Hostile Factor: 1.0 / 0.5 / 0.25 based on threat",
			"k": "Float_PreferHigherExpectedDamageToHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 2.5
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer locations close to optimal distance to other allies.",
			"k": "Float_PreferOptimalDistanceToAllyFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer locations close to optimal distance to other hostiles.",
			"k": "Float_PreferOptimalDistanceToHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			"json_comment": "Boost provided to walk moves if the moving unit has the \"Sure footing\" ability.",
			"k": "Float_SureFootingAbilityWalkBoost",
			"v": {
				"type": "Float",
				"floatVal": 0
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be inside water.",
			"k": "Float_PreferHigherHeatSinkLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.2
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be inside water WHEN SPRINTING.",
			"k": "Float_SprintPreferHigherHeatSinkLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.2
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be in locations with movement bonus.",
			"k": "Float_PreferHigherMovementBonusLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.2
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be in locations with movement bonus WHEN SPRINTING.",
			"k": "Float_SprintPreferHigherMovementBonusLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.15
			}
		},
		{
			"json_comment": "A weight for an influence factor to prefer to get inside melee range. Negative values will encourage units to get out of melee range.",
			"k": "Float_PreferInsideMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.5
			}
		},
		{
			"json_comment": "A weight for an influence factor to prefer to get inside melee range WHEN SPRINTING. Negative values will encourage units to get out of melee range.",
			"k": "Float_SprintPreferInsideMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.45
			}
		},
		{
			"json_comment": "If my move would not result in being able to fire, should I rewrite that move as a sprint?",
			"k": "Bool_RewriteNonAttackMoves",
			"v": {
				"type": "Bool",
				"boolVal": true
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to stay within a circular fence from the centerpoint of the lance. Note - negative logic; this should use negative numbers, as it's designed to discourage being outside the radius and have no effect inside the fence.",
			"k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -4.5
			}
		},
		{
			"json_comment": "Description: Number of points of damage that a sensor locking turn needs to do over a straight up shooting turn before deciding to sensor lock. Positive is a shooting bias, negative is a sensor lock bias.",
			"k": "Float_MinimumSensorLockQuality",
			"v": {
				"type": "Float",
				"floatVal": 40
			}
		},
		{
			"json_comment": "Influence Factor Weight for standing still when hostiles are in melee range.",
			"k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -1.5
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to fewest hostiles. Useful for defensive moves.",
			"k": "Float_PreferLOSToFewestHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to fewest hostiles WHEN SPRINTING. Useful for defensive moves.",
			"k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.05
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to most hostiles.",
			"k": "Float_PreferLOSToMostHostilesFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to most hostiles WHEN SPRINTING.",
			"k": "Float_SprintPreferLOSToMostHostilesFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to defend my own weak armor.",
			"k": "Float_PreferPresentingHigherArmorToHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.75
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to defend my own weak armor WHEN SPRINTING.",
			"k": "Float_SprintPreferPresentingHigherArmorToHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.65
			}
		},
		{
			"json_comment": "When choosing to turn the strongest armor towards the enemy, the rear armor can be presented to the enemy if the unit is in \"offensive\" mode, only if this is set to True.",
			"k": "Bool_AllowTurningRearArmorToEnemy",
			"v": {
				"type": "Bool",
				"boolVal": true
			}
		}
	]
}