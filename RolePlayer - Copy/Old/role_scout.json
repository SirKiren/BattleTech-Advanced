{
	"behaviorVariables": [
		{
			"json_comment": "How much a location must be damaged before an overheat attack will be considered, as a fraction from 0.0 (undamaged) to 1.0 (location destroyed)",
			"k": "Float_ExistingTargetDamageForOverheatAttack",
			"v": {
				"type": "Float",
				"floatVal": 0.95
			}
		},
		{
			"json_comment": "Maximum leg damage allowed for DFA attack (above which attacks will not be considered), as a fraction from 0.0 (undamaged) to 1.0 (location destroyed)",
			"k": "Float_OwnMaxLegDamageForDFAAttack",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			"json_comment": "Influence Factor Weight for preferring moving less.",
			"k": "Float_PreferLowerMovementFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -1.3
			}
		},
		{
			"json_comment": "Influence Factor Weight for preferring moving less WHEN SPRINTING.",
			"k": "Float_SprintPreferLowerMovementFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.7
			}
		},
		{
			"json_comment": "Influence Factor Weight for preferring higher elevations.",
			"k": "Float_PreferHigherPositionFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.05
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer locations close to optimal distance to other allies.",
			"k": "Float_PreferOptimalDistanceToAllyFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.4
			}
		},
		{
			"json_comment": "When considering different kinds of attacks, multiply the melee damage by this value to decide which attack to use.",
			"k": "Float_MeleeDamageMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 1.15
			}
		},
		{
			"json_comment": "If a target is a melee revenge target, what additional damage multiplier to apply. The total multiplier is Float_MeleeDamageMultiplier + FloatMeleeRevengeBonus.",
			"k": "Float_MeleeRevengeBonus",
			"v": {
				"type": "Float",
				"floatVal": 1.5
			}
		},
		{
			"json_comment": "If a target is a melee revenge target, but the ratio of its expected melee damage to my expected melee damage is higher than this threshold, DO NOT MELEE! It'll all end in tears!",
			"k": "Float_MeleeDamageRatioCap",
			"v": {
				"type": "Float",
				"floatVal": 1.25
			}
		},
		{
			"json_comment": "A weight for an influence factor to prefer to get inside melee range. Negative values will encourage units to get out of melee range.",
			"k": "Float_PreferInsideMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.8
			}
		},
		{
			"json_comment": "A weight for an influence factor to prefer to get inside melee range WHEN SPRINTING. Negative values will encourage units to get out of melee range.",
			"k": "Float_SprintPreferInsideMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -0.4
			}
		},
		{
			"json_comment": "If unsteady, the chance of just deciding to switch to defensive.",
			"k": "Float_UnsteadyCausesDefensiveMovePercentage",
			"v": {
				"type": "Float",
				"floatVal": 50
			}
		},
		{
			"json_comment": "How much of expected melee damage to add in again as bonus damage when attacking evasive targets (0 - none, 1 - 100% bonus damage)",
			"k": "Float_MeleeBonusMultiplierWhenAttackingEvasiveTargets",
			"v": {
				"type": "Float",
				"floatVal": 3.5
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be inside forests or other locations that grant guard.",
			"k": "Float_PreferLocationsThatGrantGuardFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.75
			}
		},
		{
			"json_comment": "The base percentage chance (0-100) to reserve.",
			"k": "Float_ReserveBasePercentage",
			"v": {
				"type": "Float",
				"floatVal": 60
			}
		},
		{
			"json_comment": "Positive values mean to go that much AFTER the average of the phases of remaining hostiles.",
			"k": "Float_ReserveHostileOffset",
			"v": {
				"type": "Float",
				"floatVal": 1.5
			}
		},
		{
			"json_comment": "Percentage (100.0 equals 100%) of unit's hit points below which damage is considered not lethal. Used by PreferNotLethalPositionFactor.",
			"k": "Float_OverkillThresholdLowForLethalPositionFactor",
			"v": {
				"type": "Float",
				"floatVal": 50
			}
		},
		{
			"json_comment": "Percentage (100.0 equals 100%) of unit's hit points above which damage is considered lethal. Used by PreferNotLethalPositionFactor.",
			"k": "Float_OverkillThresholdHighForLethalPositionFactor",
			"v": {
				"type": "Float",
				"floatVal": 250
			}
		},
		{
			"json_comment": "Influence Factor to prefer this lance to surround hostile units.",
			"k": "Float_PreferSurroundingHostileUnitsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.9
			}
		},
		{
			"json_comment": "Influence Factor to prefer not to be surrounded by hostile units.",
			"k": "Float_PreferNotSurroundedByHostileUnitsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.3
			}
		},
		{
			"json_comment": "Influence Factor to prefer not to be surrounded by hostile units WHEN SPRINTING.",
			"k": "Float_SprintPreferNotSurroundedByHostileUnitsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			"json_comment": "Sprint Hysteresis Multiplier value, the value multiplies the \"sprint juice level\" when a sprint move happens. Values can be between 0.0 and 1.0, with larger values (closer to 1.0) leaving more \"sprint juice\" around for next turn.",
			"k": "Float_SprintHysteresisMultiplier",
			"v": {
				"type": "Float",
				"floatVal": 1
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to stay within a circular fence from the centerpoint of the lance. Note - negative logic; this should use negative numbers, as it's designed to discourage being outside the radius and have no effect inside the fence.",
			"k": "Float_PreferStayInsideFenceNegativeLogicFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -3
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to stay within a circular fence from the centerpoint of the lance WHEN SPRINTING. Note - negative logic; this should use negative numbers, as it's designed to discourage being outside the radius and have no effect inside the fence.",
			"k": "Float_SprintPreferStayInsideFenceNegativeLogicFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -2
			}
		},
		{
			"json_comment": "Description: Number of points of damage that a sensor locking turn needs to do over a straight up shooting turn before deciding to sensor lock. Positive is a shooting bias, negative is a sensor lock bias.",
			"k": "Float_MinimumSensorLockQuality",
			"v": {
				"type": "Float",
				"floatVal": 35
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to maximize ranged defense bonus (e.g. mineral fields).",
			"k": "Float_PreferHigherRangedDefenseBonusLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.15
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to maximize ranged defense bonus (e.g. mineral fields) WHEN SPRINTING.",
			"k": "Float_SprintPreferHigherRangedDefenseBonusLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.2
			}
		},
		{
			"json_comment": "Weight for how much to prefer to be exposed to enemy fire alone. Probably negative.",
			"k": "Float_AlonePreferenceWeight",
			"v": {
				"type": "Float",
				"floatVal": -2
			}
		},
		{
			"json_comment": "Weight for how much to prefer to be exposed to enemy fire alone WHEN SPRINTING. Probably negative.",
			"k": "Float_SprintAlonePreferenceWeight",
			"v": {
				"type": "Float",
				"floatVal": -1.75
			}
		},
		{
			"json_comment": "When a buddy is exposed to enemy fire alone, apply this weight to locations that DO NOT have line of fire to hostiles. Probably negative.",
			"k": "Float_BuddyAloneFiringSolutionPreferenceWeight",
			"v": {
				"type": "Float",
				"floatVal": -1.2
			}
		},
		{
			"json_comment": "How fast (percentage of full speed, 0% = 0, 100% = 100.0) to follow patrol routes.",
			"k": "Float_PatrolRouteThrottlePercentage",
			"v": {
				"type": "Float",
				"floatVal": 70
			}
		},
		{
			"json_comment": "Weight for an influence factor that seeks to stay within ECM range of friendlies WHEN SPRINTING",
			"k": "Float_SprintPreferFriendlyECMFields",
			"v": {
				"type": "Float",
				"floatVal": 0.75
			}
		},
		{
			"json_comment": "Whether when enemy is ghosted, to use sprint or walk distance as marker to calculate influence map positional factors. Lerp is 0 - 1, Walking to Sprinting",
			"k": "Float_SignalInWeapRngWhenEnemyGhostedWithinMoveDistance",
			"v": {
				"type": "Float",
				"floatVal": 0.75
			}
		},
		{
			"json_comment": "Influence Factor Weight for standing still when hostiles are in melee range.",
			"k": "Float_PreferStationaryWhenHostilesInMeleeRangeFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": -1.5
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer being behind hostiles. Hostile Factor: 1.0 / 0.5 / 0.25 based on threat",
			"k": "Float_PreferAttackFromBehindHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.45
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer being beside hostiles. Hostile Factor: 1.0 / 0.5 / 0.25 based on threat",
			"k": "Float_PreferAttackFrom90DegreesToHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.2
			}
		},
		{
			"json_comment": "Influence Factor Weight to reject being closer than personal space to allies WHEN SPRINTING.",
			"k": "Float_SprintPreferNoCloserThanPersonalSpaceToAllyFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 22.25
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to fewest hostiles. Useful for defensive moves.",
			"k": "Float_PreferLOSToFewestHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to fewest hostiles WHEN SPRINTING. Useful for defensive moves.",
			"k": "Float_SprintPreferLOSToFewestHostileFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.2
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to most hostiles.",
			"k": "Float_PreferLOSToMostHostilesFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0
			}
		},
		{
			"json_comment": "Influence Factor Weight to prefer having LOS to most hostiles WHEN SPRINTING.",
			"k": "Float_SprintPreferLOSToMostHostilesFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be in locations with stability bonus.",
			"k": "Float_PreferLowerStabilityDamageMultiplierLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		},
		{
			"json_comment": "Influence Factor Weight to control the desire to be in locations with stability bonus WHEN SPRINTING.",
			"k": "Float_SprintPreferLowerStabilityDamageMultiplierLocationsFactorWeight",
			"v": {
				"type": "Float",
				"floatVal": 0.1
			}
		}
	]
}